// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR {
    using System;
    using UnityEngine;


    public partial class SteamVR_Actions {

        private static SteamVR_Action_Boolean p_default_Grip;

        private static SteamVR_Action_Single p_default_ThrustUp;

        private static SteamVR_Action_Single p_default_ThrustDown;

        private static SteamVR_Action_Boolean p_default_RollMode;

        private static SteamVR_Action_Boolean p_default_Interact;

        private static SteamVR_Action_Boolean p_default_Jump;

        private static SteamVR_Action_Boolean p_default_Back;

        private static SteamVR_Action_Boolean p_default_Menu;

        private static SteamVR_Action_Boolean p_default_Map;

        private static SteamVR_Action_Vector2 p_default_Look;

        private static SteamVR_Action_Vector2 p_default_Move;

        private static SteamVR_Action_Pose p_default_LeftHand;

        private static SteamVR_Action_Pose p_default_RightHand;

        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;

        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;

        private static SteamVR_Action_Single p_default_Squeeze;

        private static SteamVR_Action_Boolean p_default_GrabPinch;

        private static SteamVR_Action_Vibration p_default_Haptic;

        public static SteamVR_Action_Boolean default_Grip {
            get {
                return SteamVR_Actions.p_default_Grip.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Single default_ThrustUp {
            get {
                return SteamVR_Actions.p_default_ThrustUp.GetCopy<SteamVR_Action_Single>();
            }
        }

        public static SteamVR_Action_Single default_ThrustDown {
            get {
                return SteamVR_Actions.p_default_ThrustDown.GetCopy<SteamVR_Action_Single>();
            }
        }

        public static SteamVR_Action_Boolean default_RoolMode {
            get {
                return SteamVR_Actions.p_default_RollMode.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_Interact {
            get {
                return SteamVR_Actions.p_default_Interact.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_Jump {
            get {
                return SteamVR_Actions.p_default_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_Back {
            get {
                return SteamVR_Actions.p_default_Back.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_Menu {
            get {
                return SteamVR_Actions.p_default_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Boolean default_Map {
            get {
                return SteamVR_Actions.p_default_Map.GetCopy<SteamVR_Action_Boolean>();
            }
        }

        public static SteamVR_Action_Vector2 default_Look {
            get {
                return SteamVR_Actions.p_default_Look.GetCopy<SteamVR_Action_Vector2>();
            }
        }

        public static SteamVR_Action_Vector2 default_Move {
            get {
                return SteamVR_Actions.p_default_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }

        public static SteamVR_Action_Pose default_LeftHand {
            get {
                return SteamVR_Actions.p_default_LeftHand.GetCopy<SteamVR_Action_Pose>();
            }
        }

        public static SteamVR_Action_Pose default_RightHand {
            get {
                return SteamVR_Actions.p_default_RightHand.GetCopy<SteamVR_Action_Pose>();
            }
        }

        public static SteamVR_Action_Vibration default_Haptic {
            get {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }

        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }

        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }

        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }

        private static void InitializeActionArrays () {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_ThrustUp,
                    SteamVR_Actions.default_ThrustDown,
                    SteamVR_Actions.default_RoolMode,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_Back,
                    SteamVR_Actions.default_Menu,
                    SteamVR_Actions.default_Map,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_LeftHand,
                    SteamVR_Actions.default_RightHand,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_ThrustUp,
                    SteamVR_Actions.default_ThrustDown,
                    SteamVR_Actions.default_RoolMode,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_Back,
                    SteamVR_Actions.default_Menu,
                    SteamVR_Actions.default_Map,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_LeftHand,
                    SteamVR_Actions.default_RightHand,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.default_LeftHand,
                    SteamVR_Actions.default_RightHand};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_RoolMode,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_Back,
                    SteamVR_Actions.default_Menu,
                    SteamVR_Actions.default_Map};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_ThrustUp,
                    SteamVR_Actions.default_ThrustDown};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_Move};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[]
            {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_ThrustUp,
                    SteamVR_Actions.default_ThrustDown,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_RoolMode,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_Back,
                    SteamVR_Actions.default_Menu,
                    SteamVR_Actions.default_Map,
                    SteamVR_Actions.default_Look,
                    SteamVR_Actions.default_Move};
        }

        private static void PreInitActions () {
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Grip")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_ThrustUp = ((SteamVR_Action_Single) (SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/ThrustUp")));
            SteamVR_Actions.p_default_ThrustDown = ((SteamVR_Action_Single) (SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/ThrustDown")));
            SteamVR_Actions.p_default_RollMode = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/RollMode")));
            SteamVR_Actions.p_default_Interact = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Interact")));
            SteamVR_Actions.p_default_Jump = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Jump")));
            SteamVR_Actions.p_default_Back = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Back")));
            SteamVR_Actions.p_default_Menu = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Menu")));
            SteamVR_Actions.p_default_Map = ((SteamVR_Action_Boolean) (SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Map")));
            SteamVR_Actions.p_default_Look = ((SteamVR_Action_Vector2) (SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Look")));
            SteamVR_Actions.p_default_Move = ((SteamVR_Action_Vector2) (SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Move")));
            SteamVR_Actions.p_default_LeftHand = ((SteamVR_Action_Pose) (SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/LeftHand")));
            SteamVR_Actions.p_default_RightHand = ((SteamVR_Action_Pose) (SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/RightHand")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration) (SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
