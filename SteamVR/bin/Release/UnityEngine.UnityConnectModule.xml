<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.UnityConnectModule</name>
    </assembly>
    <member name="T:UnityEngine.Analytics.AnalyticsSessionInfo">
      <summary>
        <para>Accesses for Analytics session information (common for all game instances).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.AnalyticsSessionInfo.sessionElapsedTime">
      <summary>
        <para>Session time since the begining of player game session.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.AnalyticsSessionInfo.sessionId">
      <summary>
        <para>Session id is used for tracking player game session.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.AnalyticsSessionInfo.sessionState">
      <summary>
        <para>Session state.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Analytics.AnalyticsSessionInfo.sessionStateChanged(UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged)">
      <summary>
        <para>This event occurs when a Analytics session state changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Analytics.AnalyticsSessionInfo.userId">
      <summary>
        <para>UserId is random GUID to track a player and is persisted across game session.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Analytics.AnalyticsSessionInfo.SessionStateChanged">
      <summary>
        <para>This event occurs when a Analytics session state changes.</para>
      </summary>
      <param name="sessionState">Current session state.</param>
      <param name="sessionId">Current session id.</param>
      <param name="sessionElapsedTime">Game player current session time.</param>
      <param name="sessionChanged">Set to true when sessionId has changed.</param>
    </member>
    <member name="T:UnityEngine.Analytics.AnalyticsSessionState">
      <summary>
        <para>Session tracking states.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsSessionState.kSessionPaused">
      <summary>
        <para>Session tracking has paused.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsSessionState.kSessionResumed">
      <summary>
        <para>Session tracking has resumed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsSessionState.kSessionStarted">
      <summary>
        <para>Session tracking has started.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsSessionState.kSessionStopped">
      <summary>
        <para>Session tracking has stopped.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RemoteSettings">
      <summary>
        <para>Accesses remote settings (common for all game instances).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.ForceUpdate">
      <summary>
        <para>Forces the game to download the newest settings from the server and update its values.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetCount">
      <summary>
        <para>Returns number of keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String,System.Single)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String,System.Int32)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetKeys">
      <summary>
        <para>Returns all the keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String,System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.HasKey(System.String)">
      <summary>
        <para>Returns true if key exists in the remote settings.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="?:UnityEngine.RemoteSettings.Updated(UnityEngine.RemoteSettings/UpdatedEventHandler)">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.RemoteSettings.UpdatedEventHandler">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
    </member>
  </members>
</doc>
