<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.AIModule</name>
    </assembly>
    <member name="T:UnityEngine.AI.NavMesh">
      <summary>
        <para>Singleton class to access the baked NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMesh.avoidancePredictionTime">
      <summary>
        <para>Describes how far in the future the agents predict collisions for avoidance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMesh.onPreUpdate">
      <summary>
        <para>Set a function to be called before the NavMesh is updated during the frame update execution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMesh.pathfindingIterationsPerFrame">
      <summary>
        <para>The maximum amount of nodes processed each frame in the asynchronous pathfinding process.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddLink(UnityEngine.AI.NavMeshLinkData)">
      <summary>
        <para>Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.</para>
      </summary>
      <param name="link">Describing the properties of the link.</param>
      <returns>
        <para>Representing the added link.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddLink(UnityEngine.AI.NavMeshLinkData,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.</para>
      </summary>
      <param name="link">Describing the properties of the link.</param>
      <param name="position">Translate the link to this position.</param>
      <param name="rotation">Rotate the link to this orientation.</param>
      <returns>
        <para>Representing the added link.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddNavMeshData(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Adds the specified NavMeshData to the game.</para>
      </summary>
      <param name="navMeshData">Contains the data for the navmesh.</param>
      <returns>
        <para>Representing the added navmesh.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddNavMeshData(UnityEngine.AI.NavMeshData,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Adds the specified NavMeshData to the game.</para>
      </summary>
      <param name="navMeshData">Contains the data for the navmesh.</param>
      <param name="position">Translate the navmesh to this position.</param>
      <param name="rotation">Rotate the navmesh to this orientation.</param>
      <returns>
        <para>Representing the added navmesh.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.AI.NavMesh.AllAreas">
      <summary>
        <para>Area mask constant that includes all NavMesh areas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculatePath(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculate a path between two points and store the resulting path.</para>
      </summary>
      <param name="sourcePosition">The initial position of the path requested.</param>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when calculating a path.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a either a complete or partial path is found and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculatePath(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshQueryFilter,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculates a path between two positions mapped to the NavMesh, subject to the constraints and costs defined by the filter argument.</para>
      </summary>
      <param name="sourcePosition">The initial position of the path requested.</param>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="filter">A filter specifying the cost of NavMesh areas that can be passed when calculating a path.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a either a complete or partial path is found and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculateTriangulation">
      <summary>
        <para>Calculates triangulation of the current navmesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CreateSettings">
      <summary>
        <para>Creates and returns a new entry of NavMesh build settings available for runtime NavMesh building.</para>
      </summary>
      <returns>
        <para>The created settings.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.FindClosestEdge(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Int32)">
      <summary>
        <para>Locate the closest NavMesh edge from a point on the NavMesh.</para>
      </summary>
      <param name="sourcePosition">The origin of the distance query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when finding the nearest edge.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.FindClosestEdge(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Locate the closest NavMesh edge from a point on the NavMesh, subject to the constraints of the filter argument.</para>
      </summary>
      <param name="sourcePosition">The origin of the distance query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="filter">A filter specifying which NavMesh areas can be passed when finding the nearest edge.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetAreaCost(System.Int32)">
      <summary>
        <para>Gets the cost for path finding over geometry of the area type.</para>
      </summary>
      <param name="areaIndex">Index of the area to get.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetAreaFromName(System.String)">
      <summary>
        <para>Returns the area index for a named NavMesh area type.</para>
      </summary>
      <param name="areaName">Name of the area to look up.</param>
      <returns>
        <para>Index if the specified are, or -1 if no area found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetLayerCost(System.Int32)">
      <summary>
        <para>Gets the cost for traversing over geometry of the layer type on all agents.</para>
      </summary>
      <param name="layer"></param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetNavMeshLayerFromName(System.String)">
      <summary>
        <para>Returns the layer index for a named layer.</para>
      </summary>
      <param name="layerName"></param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsByID(System.Int32)">
      <summary>
        <para>Returns an existing entry of NavMesh build settings.</para>
      </summary>
      <param name="agentTypeID">The ID to look for.</param>
      <returns>
        <para>The settings found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsByIndex(System.Int32)">
      <summary>
        <para>Returns an existing entry of NavMesh build settings by its ordered index.</para>
      </summary>
      <param name="index">The index to retrieve from.</param>
      <returns>
        <para>The found settings.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsCount">
      <summary>
        <para>Returns the number of registered NavMesh build settings.</para>
      </summary>
      <returns>
        <para>The number of registered entries.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsNameFromID(System.Int32)">
      <summary>
        <para>Returns the name associated with the NavMesh build settings matching the provided agent type ID.</para>
      </summary>
      <param name="agentTypeID">The ID to look for.</param>
      <returns>
        <para>The name associated with the ID found.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMesh.OnNavMeshPreUpdate">
      <summary>
        <para>A delegate which can be used to register callback methods to be invoked before the NavMesh system updates.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Int32)">
      <summary>
        <para>Trace a line between two points on the NavMesh.</para>
      </summary>
      <param name="sourcePosition">The origin of the ray.</param>
      <param name="targetPosition">The end of the ray.</param>
      <param name="hit">Holds the properties of the ray cast resulting location.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when tracing the ray.</param>
      <returns>
        <para>True if the ray is terminated before reaching target position. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Traces a line between two positions on the NavMesh, subject to the constraints defined by the filter argument.</para>
      </summary>
      <param name="sourcePosition">The origin of the ray.</param>
      <param name="targetPosition">The end of the ray.</param>
      <param name="hit">Holds the properties of the ray cast resulting location.</param>
      <param name="filter">A filter specifying which NavMesh areas can be passed when tracing the ray.</param>
      <returns>
        <para>True if the ray is terminated before reaching target position. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveLink(UnityEngine.AI.NavMeshLinkInstance)">
      <summary>
        <para>Removes a link from the NavMesh.</para>
      </summary>
      <param name="handle">The instance of a link to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveNavMeshData(UnityEngine.AI.NavMeshDataInstance)">
      <summary>
        <para>Removes the specified NavMeshDataInstance from the game, making it unavailable for agents and queries.</para>
      </summary>
      <param name="handle">The instance of a NavMesh to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveSettings(System.Int32)">
      <summary>
        <para>Removes the build settings matching the agent type ID.</para>
      </summary>
      <param name="agentTypeID">The ID of the entry to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Single,System.Int32)">
      <summary>
        <para>Finds the closest point on NavMesh within specified range.</para>
      </summary>
      <param name="sourcePosition">The origin of the sample query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="maxDistance">Sample within this distance from sourcePosition.</param>
      <param name="areaMask">A mask specifying which NavMesh areas are allowed when finding the nearest point.</param>
      <returns>
        <para>True if a nearest point is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Single,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Samples the position closest to sourcePosition - on any NavMesh built for the agent type specified by the filter.</para>
      </summary>
      <param name="sourcePosition">The origin of the sample query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="maxDistance">Sample within this distance from sourcePosition.</param>
      <param name="filter">A filter specifying which NavMesh areas are allowed when finding the nearest point.</param>
      <returns>
        <para>True if a nearest point is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for finding path over geometry of the area type on all agents.</para>
      </summary>
      <param name="areaIndex">Index of the area to set.</param>
      <param name="cost">New cost.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SetLayerCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over geometry of the layer type on all agents.</para>
      </summary>
      <param name="layer"></param>
      <param name="cost"></param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshAgent">
      <summary>
        <para>Navigation mesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.acceleration">
      <summary>
        <para>The maximum acceleration of an agent as it follows a path, given in units / sec^2.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.agentTypeID">
      <summary>
        <para>The type ID for the agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.angularSpeed">
      <summary>
        <para>Maximum turning speed in (deg/s) while following a path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.areaMask">
      <summary>
        <para>Specifies which NavMesh areas are passable. Changing areaMask will make the path stale (see isPathStale).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoBraking">
      <summary>
        <para>Should the agent brake automatically to avoid overshooting the destination point?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoRepath">
      <summary>
        <para>Should the agent attempt to acquire a new path if the existing path becomes invalid?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoTraverseOffMeshLink">
      <summary>
        <para>Should the agent move across OffMeshLinks automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.avoidancePriority">
      <summary>
        <para>The avoidance priority level.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.baseOffset">
      <summary>
        <para>The relative vertical displacement of the owning GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.currentOffMeshLinkData">
      <summary>
        <para>The current OffMeshLinkData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.desiredVelocity">
      <summary>
        <para>The desired velocity of the agent including any potential contribution from avoidance. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.destination">
      <summary>
        <para>Gets or attempts to set the destination of the agent in world-space units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.hasPath">
      <summary>
        <para>Does the agent currently have a path? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.height">
      <summary>
        <para>The height of the agent for purposes of passing under obstacles, etc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isOnNavMesh">
      <summary>
        <para>Is the agent currently bound to the navmesh? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isOnOffMeshLink">
      <summary>
        <para>Is the agent currently positioned on an OffMeshLink? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isPathStale">
      <summary>
        <para>Is the current path stale. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isStopped">
      <summary>
        <para>This property holds the stop or resume condition of the NavMesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.navMeshOwner">
      <summary>
        <para>Returns the owning object of the NavMesh the agent is currently placed on (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.nextOffMeshLinkData">
      <summary>
        <para>The next OffMeshLinkData on the current path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.nextPosition">
      <summary>
        <para>Gets or sets the simulation position of the navmesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.obstacleAvoidanceType">
      <summary>
        <para>The level of quality of avoidance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.path">
      <summary>
        <para>Property to get and set the current path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.pathPending">
      <summary>
        <para>Is a path in the process of being computed but not yet ready? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.pathStatus">
      <summary>
        <para>The status of the current path (complete, partial or invalid).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.radius">
      <summary>
        <para>The avoidance radius for the agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.remainingDistance">
      <summary>
        <para>The distance between the agent's position and the destination on the current path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.speed">
      <summary>
        <para>Maximum movement speed when following a path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.steeringTarget">
      <summary>
        <para>Get the current steering target along the path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.stoppingDistance">
      <summary>
        <para>Stop within this distance from the target position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updatePosition">
      <summary>
        <para>Gets or sets whether the transform position is synchronized with the simulated agent position. The default value is true.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updateRotation">
      <summary>
        <para>Should the agent update the transform orientation?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updateUpAxis">
      <summary>
        <para>Allows you to specify whether the agent should be aligned to the up-axis of the NavMesh or link that it is placed on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.velocity">
      <summary>
        <para>Access the current velocity of the NavMeshAgent component, or set a velocity to control the agent manually.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.walkableMask">
      <summary>
        <para>Specifies which NavMesh layers are passable (bitfield). Changing walkableMask will make the path stale (see isPathStale).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.ActivateCurrentOffMeshLink(System.Boolean)">
      <summary>
        <para>Enables or disables the current off-mesh link.</para>
      </summary>
      <param name="activated">Is the link activated?</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.CalculatePath(UnityEngine.Vector3,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculate a path to a specified point and store the resulting path.</para>
      </summary>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a path is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.CompleteOffMeshLink">
      <summary>
        <para>Completes the movement on the current OffMeshLink.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.FindClosestEdge(UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Locate the closest NavMesh edge.</para>
      </summary>
      <param name="hit">Holds the properties of the resulting location.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.GetAreaCost(System.Int32)">
      <summary>
        <para>Gets the cost for path calculation when crossing area of a particular type.</para>
      </summary>
      <param name="areaIndex">Area Index.</param>
      <returns>
        <para>Current cost for specified area index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.GetLayerCost(System.Int32)">
      <summary>
        <para>Gets the cost for crossing ground of a particular type.</para>
      </summary>
      <param name="layer">Layer index.</param>
      <returns>
        <para>Current cost of specified layer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Move(UnityEngine.Vector3)">
      <summary>
        <para>Apply relative movement to current position.</para>
      </summary>
      <param name="offset">The relative movement vector.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Raycast(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Trace a straight path towards a target postion in the NavMesh without moving the agent.</para>
      </summary>
      <param name="targetPosition">The desired end position of movement.</param>
      <param name="hit">Properties of the obstacle detected by the ray (if any).</param>
      <returns>
        <para>True if there is an obstacle between the agent and the target position, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.ResetPath">
      <summary>
        <para>Clears the current path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Resume">
      <summary>
        <para>Resumes the movement along the current path after a pause.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SamplePathPosition(System.Int32,System.Single,UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Sample a position along the current path.</para>
      </summary>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when tracing the path.</param>
      <param name="maxDistance">Terminate scanning the path at this distance.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <returns>
        <para>True if terminated before reaching the position at maxDistance, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over areas of the area type.</para>
      </summary>
      <param name="areaIndex">Area cost.</param>
      <param name="areaCost">New cost for the specified area index.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetDestination(UnityEngine.Vector3)">
      <summary>
        <para>Sets or updates the destination thus triggering the calculation for a new path.</para>
      </summary>
      <param name="target">The target point to navigate to.</param>
      <returns>
        <para>True if the destination was requested successfully, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetLayerCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over geometry of the layer type.</para>
      </summary>
      <param name="layer">Layer index.</param>
      <param name="cost">New cost for the specified layer.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetPath(UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Assign a new path to this agent.</para>
      </summary>
      <param name="path">New path to follow.</param>
      <returns>
        <para>True if the path is succesfully assigned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Stop">
      <summary>
        <para>Stop movement of this agent along its current path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Warp(UnityEngine.Vector3)">
      <summary>
        <para>Warps agent to the provided position.</para>
      </summary>
      <param name="newPosition">New position to warp the agent to.</param>
      <returns>
        <para>True if agent is successfully warped, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildDebugFlags">
      <summary>
        <para>Bitmask used for operating with debug data from the NavMesh build process.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.All">
      <summary>
        <para>All debug data from the NavMesh build process is taken into consideration.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.InputGeometry">
      <summary>
        <para>The triangles of all the geometry that is used as a base for computing the new NavMesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.None">
      <summary>
        <para>No debug data from the NavMesh build process is taken into consideration.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.PolygonMeshes">
      <summary>
        <para>Meshes of convex polygons constructed within the unified contours of adjacent regions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.PolygonMeshesDetail">
      <summary>
        <para>The triangulated meshes with height details that better approximate the source geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.RawContours">
      <summary>
        <para>The contours that follow precisely the edges of each surface region.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.Regions">
      <summary>
        <para>The segmentation of the traversable surfaces into smaller areas necessary for producing simple polygons.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.SimplifiedContours">
      <summary>
        <para>Contours bounding each of the surface regions, described through fewer vertices and straighter edges compared to RawContours.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildDebugFlags.Voxels">
      <summary>
        <para>The voxels produced by rasterizing the source geometry into walkable and unwalkable areas.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildDebugSettings">
      <summary>
        <para>Specify which of the temporary data generated while building the NavMesh should be retained in memory after the process has completed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildDebugSettings.flags">
      <summary>
        <para>Specify which types of debug data to collect when building the NavMesh.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuilder">
      <summary>
        <para>Navigation mesh builder interface.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.BuildNavMeshData(UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Builds a NavMesh data object from the provided input sources.</para>
      </summary>
      <param name="buildSettings">Settings for the bake process, see NavMeshBuildSettings.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes the volume where the NavMesh should be built. Empty bounds is treated as no bounds, i.e. the NavMesh will cover all the inputs.</param>
      <param name="position">Center of the NavMeshData. This specifies the origin for the NavMesh tiles (See Also: NavMeshBuildSettings.tileSize).</param>
      <param name="rotation">Orientation of the NavMeshData, you can use this to generate NavMesh with an arbitrary up-vector – e.g. for walkable vertical surfaces.</param>
      <returns>
        <para>Returns a newly built NavMeshData, or null if the NavMeshData was empty or an error occurred.
The newly built NavMeshData, or null if the NavMeshData was empty or an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.Cancel(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Cancels an asynchronous update of the specified NavMesh data. See Also: UpdateNavMeshDataAsync.</para>
      </summary>
      <param name="data">The data associated with asynchronous updating.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.CollectSources(UnityEngine.Bounds,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a volume.</para>
      </summary>
      <param name="includedWorldBounds">The queried objects must overlap these bounds to be included in the results.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.CollectSources(UnityEngine.Transform,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a transform hierarchy.</para>
      </summary>
      <param name="root">If not null, consider only root and its children in the query; if null, includes everything loaded.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.UpdateNavMeshData(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds)">
      <summary>
        <para>Incrementally updates the NavMeshData based on the sources.</para>
      </summary>
      <param name="data">The NavMeshData to update.</param>
      <param name="buildSettings">The build settings which is used to update the NavMeshData. The build settings is also hashed along with the data, so changing settings will cause a full rebuild.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes the volume where the NavMesh should be built. Empty bounds is treated as no-bounds, that is, the NavMesh will cover all the inputs.</param>
      <returns>
        <para>Returns true if the update was successful.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.UpdateNavMeshDataAsync(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds)">
      <summary>
        <para>Asynchronously and incrementally updates the NavMeshData based on the sources.</para>
      </summary>
      <param name="data">The NavMeshData to update.</param>
      <param name="buildSettings">The build settings which is used to update the NavMeshData. The build settings is also hashed along with the data, so changing settings will likely to cause full rebuild.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes to volume where the NavMesh should be built. Empty bounds is treated as no-bounds, that is, the NavMesh will cover all the inputs.</param>
      <returns>
        <para>Can be used to check the progress of the update.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildMarkup">
      <summary>
        <para>The NavMesh build markup allows you to control how certain objects are treated during the NavMesh build process, specifically when collecting sources for building.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.area">
      <summary>
        <para>The area type to use when override area is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.ignoreFromBuild">
      <summary>
        <para>Use this to specify whether the GameObject and its children should be ignored.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.overrideArea">
      <summary>
        <para>Use this to specify whether the area type of the GameObject and its children should be overridden by the area type specified in this struct.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.root">
      <summary>
        <para>Use this to specify which GameObject (including the GameObject’s children) the markup should be applied to.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSettings">
      <summary>
        <para>The NavMeshBuildSettings struct allows you to specify a collection of settings which describe the dimensions and limitations of a particular agent type.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentClimb">
      <summary>
        <para>The maximum vertical step size an agent can take.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentHeight">
      <summary>
        <para>The height of the agent for baking in world units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentRadius">
      <summary>
        <para>The radius of the agent for baking in world units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentSlope">
      <summary>
        <para>The maximum slope angle which is walkable (angle in degrees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentTypeID">
      <summary>
        <para>The agent type ID the NavMesh will be baked for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.debug">
      <summary>
        <para>Options for collecting debug data during the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.minRegionArea">
      <summary>
        <para>The approximate minimum area of individual NavMesh regions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.overrideTileSize">
      <summary>
        <para>Enables overriding the default tile size. See Also: tileSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.overrideVoxelSize">
      <summary>
        <para>Enables overriding the default voxel size. See Also: voxelSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.tileSize">
      <summary>
        <para>Sets the tile size in voxel units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.voxelSize">
      <summary>
        <para>Sets the voxel size in world length units.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuildSettings.ValidationReport(UnityEngine.Bounds)">
      <summary>
        <para>Validates the properties of NavMeshBuildSettings.</para>
      </summary>
      <param name="buildBounds">Describes the volume to build NavMesh for.</param>
      <returns>
        <para>The list of violated constraints.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSource">
      <summary>
        <para>The input to the NavMesh builder is a list of NavMesh build sources.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.area">
      <summary>
        <para>Describes the area type of the NavMesh surface for this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.component">
      <summary>
        <para>Points to the owning component - if available, otherwise null.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.shape">
      <summary>
        <para>The type of the shape this source describes. See Also: NavMeshBuildSourceShape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.size">
      <summary>
        <para>Describes the dimensions of the shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.sourceObject">
      <summary>
        <para>Describes the object referenced for Mesh and Terrain types of input sources.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.transform">
      <summary>
        <para>Describes the local to world transformation matrix of the build source. That is, position and orientation and scale of the shape.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSourceShape">
      <summary>
        <para>Used with NavMeshBuildSource to define the shape for building NavMesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Box">
      <summary>
        <para>Describes a box primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Capsule">
      <summary>
        <para>Describes a capsule primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Mesh">
      <summary>
        <para>Describes a Mesh source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.ModifierBox">
      <summary>
        <para>Describes a ModifierBox source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Sphere">
      <summary>
        <para>Describes a sphere primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Terrain">
      <summary>
        <para>Describes a TerrainData source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshCollectGeometry">
      <summary>
        <para>Used for specifying the type of geometry to collect. Used with NavMeshBuilder.CollectSources.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshCollectGeometry.PhysicsColliders">
      <summary>
        <para>Collect geometry from the 3D physics collision representation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshCollectGeometry.RenderMeshes">
      <summary>
        <para>Collect meshes form the rendered geometry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshData">
      <summary>
        <para>Contains and represents NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.position">
      <summary>
        <para>Gets or sets the world space position of the NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.rotation">
      <summary>
        <para>Gets or sets the orientation of the NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.sourceBounds">
      <summary>
        <para>Returns the bounding volume of the input geometry used to build this NavMesh (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshData.#ctor">
      <summary>
        <para>Constructs a new object for representing a NavMesh for the default agent type.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshData.#ctor(System.Int32)">
      <summary>
        <para>Constructs a new object representing a NavMesh for the specified agent type.</para>
      </summary>
      <param name="agentTypeID">The agent type ID to create a NavMesh for.</param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshDataInstance">
      <summary>
        <para>The instance is returned when adding NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshDataInstance.owner">
      <summary>
        <para>Get or set the owning Object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshDataInstance.valid">
      <summary>
        <para>True if the NavMesh data is added to the navigation system - otherwise false (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshDataInstance.Remove">
      <summary>
        <para>Removes this instance from the NavMesh system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshHit">
      <summary>
        <para>Result information for NavMesh queries.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.distance">
      <summary>
        <para>Distance to the point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.hit">
      <summary>
        <para>Flag set when hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.mask">
      <summary>
        <para>Mask specifying NavMesh area at point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.normal">
      <summary>
        <para>Normal at the point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.position">
      <summary>
        <para>Position of hit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshLinkData">
      <summary>
        <para>Used for runtime manipulation of links connecting polygons of the NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.agentTypeID">
      <summary>
        <para>Specifies which agent type this link is available for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.area">
      <summary>
        <para>Area type of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.bidirectional">
      <summary>
        <para>If true, the link can be traversed in both directions, otherwise only from start to end position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.costModifier">
      <summary>
        <para>If positive, overrides the pathfinder cost to traverse the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.endPosition">
      <summary>
        <para>End position of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.startPosition">
      <summary>
        <para>Start position of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.width">
      <summary>
        <para>If positive, the link will be rectangle aligned along the line from start to end.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshLinkInstance">
      <summary>
        <para>An instance representing a link available for pathfinding.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkInstance.owner">
      <summary>
        <para>Get or set the owning Object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkInstance.valid">
      <summary>
        <para>True if the NavMesh link is added to the navigation system - otherwise false (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshLinkInstance.Remove">
      <summary>
        <para>Removes this instance from the game.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshObstacle">
      <summary>
        <para>An obstacle for NavMeshAgents to avoid.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carveOnlyStationary">
      <summary>
        <para>Should this obstacle be carved when it is constantly moving?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carving">
      <summary>
        <para>Should this obstacle make a cut-out in the navmesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carvingMoveThreshold">
      <summary>
        <para>Threshold distance for updating a moving carved hole (when carving is enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carvingTimeToStationary">
      <summary>
        <para>Time to wait until obstacle is treated as stationary (when carving and carveOnlyStationary are enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.center">
      <summary>
        <para>The center of the obstacle, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.height">
      <summary>
        <para>Height of the obstacle's cylinder shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.radius">
      <summary>
        <para>Radius of the obstacle's capsule shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.shape">
      <summary>
        <para>The shape of the obstacle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.size">
      <summary>
        <para>The size of the obstacle, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.velocity">
      <summary>
        <para>Velocity at which the obstacle moves around the NavMesh.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshObstacleShape">
      <summary>
        <para>Shape of the obstacle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshObstacleShape.Box">
      <summary>
        <para>Box shaped obstacle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshObstacleShape.Capsule">
      <summary>
        <para>Capsule shaped obstacle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshPath">
      <summary>
        <para>A path as calculated by the navigation system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshPath.corners">
      <summary>
        <para>Corner points of the path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshPath.status">
      <summary>
        <para>Status of the path. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.ClearCorners">
      <summary>
        <para>Erase all corner points from path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.#ctor">
      <summary>
        <para>NavMeshPath constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.GetCornersNonAlloc(UnityEngine.Vector3[])">
      <summary>
        <para>Calculate the corners for the path.</para>
      </summary>
      <param name="results">Array to store path corners.</param>
      <returns>
        <para>The number of corners along the path - including start and end points.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshPathStatus">
      <summary>
        <para>Status of path.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathComplete">
      <summary>
        <para>The path terminates at the destination.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathInvalid">
      <summary>
        <para>The path is invalid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathPartial">
      <summary>
        <para>The path cannot reach the destination.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshQueryFilter">
      <summary>
        <para>Specifies which agent type and areas to consider when searching the NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshQueryFilter.agentTypeID">
      <summary>
        <para>The agent type ID, specifying which navigation meshes to consider for the query functions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshQueryFilter.areaMask">
      <summary>
        <para>A bitmask representing the traversable area types.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshQueryFilter.GetAreaCost(System.Int32)">
      <summary>
        <para>Returns the area cost multiplier for the given area type for this filter.</para>
      </summary>
      <param name="areaIndex">Index to retreive the cost for.</param>
      <returns>
        <para>The cost multiplier for the supplied area index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshQueryFilter.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the pathfinding cost multiplier for this filter for a given area type.</para>
      </summary>
      <param name="areaIndex">The area index to set the cost for.</param>
      <param name="cost">The cost for the supplied area index.</param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshTriangulation">
      <summary>
        <para>Contains data describing a triangulation of a navmesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.areas">
      <summary>
        <para>NavMesh area indices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.indices">
      <summary>
        <para>Triangle indices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshTriangulation.layers">
      <summary>
        <para>NavMeshLayer values for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.vertices">
      <summary>
        <para>Vertices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.ObstacleAvoidanceType">
      <summary>
        <para>Level of obstacle avoidance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.GoodQualityObstacleAvoidance">
      <summary>
        <para>Good avoidance. High performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.HighQualityObstacleAvoidance">
      <summary>
        <para>Enable highest precision. Highest performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.LowQualityObstacleAvoidance">
      <summary>
        <para>Enable simple avoidance. Low performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.MedQualityObstacleAvoidance">
      <summary>
        <para>Medium avoidance. Medium performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.NoObstacleAvoidance">
      <summary>
        <para>Disable avoidance.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLink">
      <summary>
        <para>Link allowing movement outside the planar navigation mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.activated">
      <summary>
        <para>Is link active.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.area">
      <summary>
        <para>NavMesh area index for this OffMeshLink component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.autoUpdatePositions">
      <summary>
        <para>Automatically update endpoints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.biDirectional">
      <summary>
        <para>Can link be traversed in both directions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.costOverride">
      <summary>
        <para>Modify pathfinding cost for the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.endTransform">
      <summary>
        <para>The transform representing link end position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.navMeshLayer">
      <summary>
        <para>NavMeshLayer for this OffMeshLink component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.occupied">
      <summary>
        <para>Is link occupied. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.startTransform">
      <summary>
        <para>The transform representing link start position.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.OffMeshLink.UpdatePositions">
      <summary>
        <para>Explicitly update the link endpoints.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLinkData">
      <summary>
        <para>State of OffMeshLink.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.activated">
      <summary>
        <para>Is link active (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.endPos">
      <summary>
        <para>Link end world position (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.linkType">
      <summary>
        <para>Link type specifier (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.offMeshLink">
      <summary>
        <para>The OffMeshLink if the link type is a manually placed Offmeshlink (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.startPos">
      <summary>
        <para>Link start world position (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.valid">
      <summary>
        <para>Is link valid (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLinkType">
      <summary>
        <para>Link type specifier.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeDropDown">
      <summary>
        <para>Vertical drop.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeJumpAcross">
      <summary>
        <para>Horizontal jump.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeManual">
      <summary>
        <para>Manually specified type of link.</para>
      </summary>
    </member>
  </members>
</doc>
